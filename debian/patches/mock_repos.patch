Description: Create mock repositories to prevent packaging binary archives
 Workaround created for Debian by upstream to prevent packaging archive files
 in Debian "source." This recreates only the portions of those .zip and .tar.gz
 files that are required for building Bazel on Debian.
Author: Yun Peng <pcloudy@google.com>
Origin: upstream, https://github.com/meteorcloudy/bazel/commit/1c38681aec9dee4eeeeac6196154c01e67878d65
Forwarded: not-needed
Last-Update: 2020-07-22

--- /dev/null
+++ b/mock_repos/bazel_skydoc/setup.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in io_bazel_skydoc."""
+
+def stardoc_repositories(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/bazel_skydoc/stardoc/html_tables_stardoc.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in io_bazel_skydoc."""
+
+def html_tables_stardoc(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/bazel_skydoc/stardoc/stardoc.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in io_bazel_skydoc."""
+
+def stardoc(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/bazel_skylib/bzl_library.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in bazel_skylib."""
+
+def bzl_library(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/platforms/BUILD
@@ -0,0 +1,15 @@
+package(default_visibility = ["//visibility:public"])
+
+licenses(["notice"])
+
+exports_files(["LICENSE"])
+
+filegroup(
+    name = "srcs",
+    srcs = [
+        "BUILD",
+        "WORKSPACE",
+        "//cpu:srcs",
+        "//os:srcs",
+    ],
+)
--- /dev/null
+++ b/mock_repos/platforms/CODEOWNERS
@@ -0,0 +1 @@
+@aiuto @aragos @gregestren @katre
--- /dev/null
+++ b/mock_repos/platforms/CONTRIBUTING.md
@@ -0,0 +1,24 @@
+# Contributing to Bazel
+
+## Contributor License Agreement
+
+Contributions to this project must be accompanied by a Contributor License
+Agreement. You (or your employer) retain the copyright to your contribution,
+this simply gives us permission to use and redistribute your contributions as
+part of the project. Head over to <https://cla.developers.google.com/> to see
+your current agreements on file or to sign a new one.
+
+You generally only need to submit a CLA once, so if you've already submitted one
+(even if it was for a different project), you probably don't need to do it
+again.
+
+## Patch Acceptance Process
+
+The process is described in the [README for this repository](README.md). For
+background, you should also understand how to
+[contribute to Bazel](https://bazel.build/contributing.html).
+
+## Setting up your development environment
+
+Read how to
+[set up your development environment](https://bazel.build/contributing.html).
--- /dev/null
+++ b/mock_repos/platforms/LICENSE
@@ -0,0 +1,201 @@
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
--- /dev/null
+++ b/mock_repos/platforms/README.md
@@ -0,0 +1,85 @@
+# [Bazel Platforms](https://bazel.build)
+
+This repository houses all canonical
+[constraint_setting()](https://docs.bazel.build/versions/master/be/platform.html#constraint_setting)s,
+[constraint_value()](https://docs.bazel.build/versions/master/be/platform.html#constraint_value)s
+and
+[platform()](https://docs.bazel.build/versions/master/be/platform.html#platform)s
+that are universally useful across languages and Bazel projects.
+
+For questions or concerns please email
+[bazel-discuss@googlegroups.com](mailto://bazel-discuss@googlegroups.com).
+
+# Motivation
+
+Constraints must be carefully organized to avoid fragmentation. If two different
+declarations for, say, cpu=x86_64 were to exist at the same time then select()
+statements and toolchain selection would stop working across languages and
+projects.
+
+# Process
+
+This repository only includes truly ubiquitous constraints.
+
+Most common constraints -- that is settings and values that can be used across
+projects - fall into specific areas like "Apple" or "Java". These are declared
+in those areas' respective repositories.
+
+A very few constraints (such as OS and cpu) are relevant for essentially all
+projects across all areas. These are what this repository is for.
+
+# Adding a canonical constraint value
+
+To add a new canonical constraint value, prepare a PR adding it to that the
+appropriate BUILD file.
+
+Note that even global constraint values are typically area values. For example,
+ios is an area value for the global setting os but belongs in the apple area.
+For the PR's reviewer(s) choose an owner of this repository plus an owner of the
+area repository this references..
+
+A constraint value should be:
+
+-   semantically clear, particularly in its distinctions from other values of
+    the same setting
+
+-   well-named: consistent with existing values of the same setting and easy to
+    understand at usage sites
+
+-   well-documented
+
+Remember that this value will apply for the entire Bazel community and its
+semantics will be difficult to impossible to change once it starts being used.
+
+# Adding a canonical constraint setting
+
+New canonical constraint settings should be rare and well-justified.
+
+To add a new setting, prepare a design document according to Bazel's design
+review process. This document should explain the need for a new setting and why
+it belongs here vs. area-specific repositories. It should clearly explain
+semantics, initial values, and criteria for adding new values.
+
+Once the design is approved prepare a PR for the actual change. If any values
+are area-specific, include the area repositories' owners as reviewers.
+
+# Private changes to global constraints
+
+If you'd like to experiment with changes to global settings or values, you can
+fork this repo for experimental purposes. But in the interest of community
+health and interoperability please don't share your changes with anyone not
+involved with the experiment. For wider distribution, submit a proper change
+here.
+
+Note that you can declare constraint_values in your own repo that are members of
+the global constraint_settings. This lets you "extend" global settings within
+the confines of your own project. But don't do this if you expect other projects
+to use these changes - this can easily lead to fragmentation conflicts.
+
+If you need custom constaint_settings, just declare them in your own repo. They
+are, by definition, not global.
+
+If you really need a permanent global change and it isn't design-approved for
+this repo, contact
+[bazel-dev@googlegroups.com](mailto://bazel-dev@googlegroups.com) to discuss
+options.
--- /dev/null
+++ b/mock_repos/platforms/WORKSPACE
@@ -0,0 +1 @@
+workspace(name = "platforms")
--- /dev/null
+++ b/mock_repos/platforms/cpu/BUILD
@@ -0,0 +1,76 @@
+# Standard cpu name constraint_setting and constraint_values
+licenses(["notice"])
+
+package(
+    default_visibility = ["//visibility:public"],
+)
+
+filegroup(
+    name = "srcs",
+    srcs = glob(["**"]),
+)
+
+# To add a new constraint_value see https://github.com/bazelbuild/platforms.
+constraint_setting(name = "cpu")
+
+# TODO(b/136237408): Remove this generic CPU name and replace with a specific one.
+constraint_value(
+    name = "aarch64",
+    constraint_setting = ":cpu",
+)
+
+# TODO(b/136237408): Remove this generic CPU name and replace with a specific one.
+constraint_value(
+    name = "arm",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "arm64_32",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "arm64",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "arm64e",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "armv7",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "armv7k",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "i386",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "ppc",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "s390x",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "x86_32",
+    constraint_setting = ":cpu",
+)
+
+constraint_value(
+    name = "x86_64",
+    constraint_setting = ":cpu",
+)
--- /dev/null
+++ b/mock_repos/platforms/os/BUILD
@@ -0,0 +1,78 @@
+# Standard constraint_setting and constraint_values to be used in platforms.
+licenses(["notice"])
+
+package(
+    default_visibility = ["//visibility:public"],
+)
+
+filegroup(
+    name = "srcs",
+    srcs = glob(["**"]),
+)
+
+# To add a new constraint_value see https://github.com/bazelbuild/platforms.
+constraint_setting(name = "os")
+
+constraint_value(
+    name = "freebsd",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "openbsd",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "android",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "linux",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "windows",
+    constraint_setting = ":os",
+)
+
+# For platforms with no OS, like microcontrollers.
+constraint_value(
+    name = "none",
+    constraint_setting = ":os",
+)
+
+### Apple OS Values
+
+constraint_value(
+    name = "ios",
+    constraint_setting = ":os",
+)
+
+# TODO(b/138656886): Rename this to macos instead of osx.
+constraint_value(
+    name = "osx",
+    constraint_setting = ":os",
+)
+
+alias(
+    name = "macos",
+    actual = ":osx",
+)
+
+constraint_value(
+    name = "tvos",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "watchos",
+    constraint_setting = ":os",
+)
+
+constraint_value(
+    name = "qnx",
+    constraint_setting = ":os",
+)
--- /dev/null
+++ b/mock_repos/remote_java_tools_linux/BUILD
@@ -0,0 +1,7 @@
+package(default_visibility = ["//visibility:public"])
+
+filegroup(
+    name = "JacocoCoverage",
+    srcs = ["java_tools/JacocoCoverage_jarjar_deploy.jar"],
+)
+
--- /dev/null
+++ b/mock_repos/rules_cc/cc/defs.bzl
@@ -0,0 +1,36 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in rules_cc."""
+
+def cc_binary(**kwargs):
+    native.cc_binary(**kwargs)
+
+def cc_library(**kwargs):
+    native.cc_library(**kwargs)
+
+def cc_test(**kwargs):
+    native.cc_test(**kwargs)
+
+def objc_library(**kwargs):
+    native.objc_library(**kwargs)
+
+def cc_proto_library(**kwargs):
+    native.cc_proto_library(**kwargs)
+
+def cc_toolchain(**kwargs):
+    native.cc_toolchain(**kwargs)
+
+def cc_toolchain_suite(**kwargs):
+    native.cc_toolchain_suite(**kwargs)
--- /dev/null
+++ b/mock_repos/rules_java/java/defs.bzl
@@ -0,0 +1,39 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in rules_java."""
+
+def java_binary(**kwargs):
+    native.java_binary(**kwargs)
+
+def java_library(**kwargs):
+    native.java_library(**kwargs)
+
+def java_test(**kwargs):
+    native.java_test(**kwargs)
+
+def java_proto_library(**kwargs):
+    native.java_proto_library(**kwargs)
+
+def java_import(**kwargs):
+    native.java_import(**kwargs)
+
+def java_toolchain(**kwargs):
+    native.java_toolchain(**kwargs)
+
+def java_runtime(**kwargs):
+    native.java_runtime(**kwargs)
+
+def java_plugin(**kwargs):
+    native.java_plugin(**kwargs)
--- /dev/null
+++ b/mock_repos/rules_pkg/deps.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in rules_pkg."""
+
+def rules_pkg_dependencies(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/rules_pkg/pkg.bzl
@@ -0,0 +1,18 @@
+# Copyright 2020 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+"""Mocks rules defined in rules_pkg."""
+
+def pkg_tar(**kwargs):
+    pass
--- /dev/null
+++ b/mock_repos/rules_proto/CONTRIBUTING.md
@@ -0,0 +1,28 @@
+# How to Contribute
+
+We'd love to accept your patches and contributions to this project. There are
+just a few small guidelines you need to follow.
+
+## Contributor License Agreement
+
+Contributions to this project must be accompanied by a Contributor License
+Agreement. You (or your employer) retain the copyright to your contribution;
+this simply gives us permission to use and redistribute your contributions as
+part of the project. Head over to <https://cla.developers.google.com/> to see
+your current agreements on file or to sign a new one.
+
+You generally only need to submit a CLA once, so if you've already submitted one
+(even if it was for a different project), you probably don't need to do it
+again.
+
+## Code reviews
+
+All submissions, including submissions by project members, require review. We
+use GitHub pull requests for this purpose. Consult
+[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more
+information on using pull requests.
+
+## Community Guidelines
+
+This project follows [Google's Open Source Community
+Guidelines](https://opensource.google.com/conduct/).
--- /dev/null
+++ b/mock_repos/rules_proto/LICENSE
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
--- /dev/null
+++ b/mock_repos/rules_proto/README.md
@@ -0,0 +1,61 @@
+# Protobuf Rules for [Bazel](https://bazel.build)
+
+This repository contains Starlark implementation of Protobuf rules in Bazel.
+
+For the list of Proto rules, see the Bazel
+[documentation](https://docs.bazel.build/versions/master/be/overview.html).
+
+## Getting Started
+
+To get started with `rules_proto`, add the following to your `WORKSPACE` file:
+
+```python
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+http_archive(
+    name = "rules_proto",
+    sha256 = "88b0a90433866b44bb4450d4c30bc5738b8c4f9c9ba14e9661deb123f56a833d",
+    strip_prefix = "rules_proto-b0cc14be5da05168b01db282fe93bdf17aa2b9f4",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/b0cc14be5da05168b01db282fe93bdf17aa2b9f4.tar.gz",
+        "https://github.com/bazelbuild/rules_proto/archive/b0cc14be5da05168b01db282fe93bdf17aa2b9f4.tar.gz",
+    ],
+)
+load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
+rules_proto_dependencies()
+rules_proto_toolchains()
+```
+
+Then, in your `BUILD` files, import and use the rules:
+
+```python
+load("@rules_proto//proto:defs.bzl", "proto_library")
+
+proto_library(
+    ...
+)
+```
+
+If you're migrating from the native proto rules to `rules_proto`, you can use
+the following [buildifier](https://github.com/bazelbuild/buildtools/blob/master/buildifier/README.md)
+command to automate the changes to your `BUILD` and `.bzl` files:
+
+```bash
+buildifier --lint=fix --warnings=native-proto <path/to/BUILD>
+```
+
+## Contributing
+
+Bazel and `rules_proto` are the work of many contributors.
+We appreciate your help!
+
+To contribute, please read the contribution guidelines:
+[CONTRIBUTING.md](https://github.com/bazelbuild/rules_proto/blob/master/CONTRIBUTING.md).
+
+Note that the `rules_proto` use the GitHub issue tracker for bug reports and
+feature requests only.
+
+For asking questions see:
+
+* [rules_proto mailing list](https://groups.google.com/forum/#!forum/proto-bazel-discuss)
+* Slack channel `#proto` on [slack.bazel.build](https://slack.bazel.build)
--- /dev/null
+++ b/mock_repos/rules_proto/WORKSPACE
@@ -0,0 +1,20 @@
+workspace(name = "rules_proto")
+
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+load("//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
+rules_proto_dependencies()
+rules_proto_toolchains()
+
+http_archive(
+    name = "bazel_toolchains",
+    sha256 = "dcb58e7e5f0b4da54c6c5f8ebc65e63fcfb37414466010cf82ceff912162296e",
+    strip_prefix = "bazel-toolchains-0.28.2",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/bazel-toolchains/archive/0.28.2.tar.gz",
+        "https://github.com/bazelbuild/bazel-toolchains/archive/0.28.2.tar.gz",
+    ],
+)
+
+load("@bazel_toolchains//rules:rbe_repo.bzl", "rbe_autoconfig")
+rbe_autoconfig(name = "buildkite_config")
--- /dev/null
+++ b/mock_repos/rules_proto/proto/BUILD
@@ -0,0 +1 @@
+# Intentionally left empty (for now).
--- /dev/null
+++ b/mock_repos/rules_proto/proto/README.md
@@ -0,0 +1,6 @@
+Unless explicitly stated otherwise, everything in this folder and all subfolders
+is considered to be an implementation detail and may change at any time without
+prior notice.
+
+Exceptions from this rule:
+  - All symbols exported in `//proto:defs.bzl` and `//proto:repositories.bzl`.
--- /dev/null
+++ b/mock_repos/rules_proto/proto/defs.bzl
@@ -0,0 +1,56 @@
+# Copyright 2019 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+load("//proto/private:native.bzl", "NativeProtoInfo", "native_proto_common")
+
+_MIGRATION_TAG = "__PROTO_RULES_MIGRATION_DO_NOT_USE_WILL_BREAK__"
+
+def _add_migration_tag(attrs):
+    if "tags" in attrs and attrs["tags"] != None:
+        attrs["tags"] += [_MIGRATION_TAG]
+    else:
+        attrs["tags"] = [_MIGRATION_TAG]
+    return attrs
+
+def proto_lang_toolchain(**attrs):
+    """Bazel proto_lang_toolchain rule.
+
+    https://docs.bazel.build/versions/master/be/protocol-buffer.html#proto_lang_toolchain
+
+    Args:
+      **attrs: Rule attributes
+    """
+    native.proto_lang_toolchain(**_add_migration_tag(attrs))
+
+def proto_library(**attrs):
+    """Bazel proto_library rule.
+
+    https://docs.bazel.build/versions/master/be/protocol-buffer.html#proto_library
+
+    Args:
+      **attrs: Rule attributes
+    """
+    native.proto_library(**_add_migration_tag(attrs))
+
+ProtoInfo = NativeProtoInfo
+"""Encapsulates information provided by `proto_library`.
+
+https://docs.bazel.build/versions/master/skylark/lib/ProtoInfo.html
+"""
+
+proto_common = native_proto_common
+"""Utilities for protocol buffers.
+
+https://docs.bazel.build/versions/master/skylark/lib/proto_common.html
+"""
--- /dev/null
+++ b/mock_repos/rules_proto/proto/private/BUILD
@@ -0,0 +1 @@
+# Intentionally left empty (for now).
--- /dev/null
+++ b/mock_repos/rules_proto/proto/private/dependencies.bzl
@@ -0,0 +1,39 @@
+# Copyright 2019 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+dependencies = {
+    "bazel_skylib": {
+        "sha256": "9245b0549e88e356cd6a25bf79f97aa19332083890b7ac6481a2affb6ada9752",
+        "strip_prefix": "bazel-skylib-0.9.0",
+        "urls": [
+            "https://github.com/bazelbuild/bazel-skylib/archive/0.9.0.tar.gz",
+        ],
+    },
+    "com_google_protobuf": {
+        "sha256": "2ee9dcec820352671eb83e081295ba43f7a4157181dad549024d7070d079cf65",
+        "strip_prefix": "protobuf-3.9.0",
+        "urls": [
+            "https://mirror.bazel.build/github.com/google/protobuf/archive/v3.9.0.tar.gz",
+            "https://github.com/protocolbuffers/protobuf/archive/v3.9.0.tar.gz",
+        ],
+    },
+    "zlib": {
+        "sha256": "c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1",
+        "build_file": "@com_google_protobuf//:third_party/zlib.BUILD",
+        "strip_prefix": "zlib-1.2.11",
+        "urls": [
+            "https://zlib.net/zlib-1.2.11.tar.gz",
+        ],
+    },
+}
--- /dev/null
+++ b/mock_repos/rules_proto/proto/private/native.bzl
@@ -0,0 +1,24 @@
+# Copyright 2019 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Redefine native symbols with a new name as a workaround for
+# exporting them in `//proto:defs.bzl` with their original name.
+#
+# While we cannot force users to load these symbol due to the lack of a
+# whitelisting mechanism, we can still export them and tell users to
+# load it to make a future migration to pure Starlark easier.
+
+NativeProtoInfo = ProtoInfo
+
+native_proto_common = proto_common
--- /dev/null
+++ b/mock_repos/rules_proto/proto/repositories.bzl
@@ -0,0 +1,30 @@
+# Copyright 2019 The Bazel Authors. All rights reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+load("//proto/private:dependencies.bzl", "dependencies")
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+def rules_proto_dependencies():
+    for name in dependencies:
+        if name in native.existing_rules():
+            continue
+
+        http_archive(
+            name = name,
+            **dependencies[name]
+        )
+
+def rules_proto_toolchains():
+    # Nothing to do here (yet).
+    pass
--- /dev/null
+++ b/mock_repos/rules_proto/tests/BUILD
@@ -0,0 +1,8 @@
+load("//proto:defs.bzl", "proto_library")
+
+proto_library(
+    name = "empty_proto",
+    srcs = [
+        "empty.proto",
+    ],
+)
--- /dev/null
+++ b/mock_repos/rules_proto/tests/empty.proto
@@ -0,0 +1,17 @@
+// Copyright 2019 The Bazel Authors. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//    http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+syntax = "proto3";
+
+package rules_proto.tests;
